// <auto-generated />
using System;
using FinanceApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FinanceApp.Data.Migrations
{
    [DbContext(typeof(DbContextFinance))]
    [Migration("20200511053926_Setup_Tables")]
    partial class Setup_Tables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FinanceApp.Entities.Budget", b =>
                {
                    b.Property<int>("IdBudget")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_Budget")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BalanceSpent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("Date");

                    b.Property<string>("DescriptionBudget")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("FinalDate")
                        .HasColumnType("Date");

                    b.Property<int>("IdStatus")
                        .HasColumnName("Id_Status")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnName("Id_User")
                        .HasColumnType("int");

                    b.Property<DateTime>("InitialDate")
                        .HasColumnType("Date");

                    b.HasKey("IdBudget");

                    b.HasIndex("IdStatus");

                    b.HasIndex("IdUser");

                    b.ToTable("Budget");
                });

            modelBuilder.Entity("FinanceApp.Entities.CategoryExpense", b =>
                {
                    b.Property<int>("IdCategoryExpense")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_CategoryExpense")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodCategoryExpense")
                        .IsRequired()
                        .HasColumnType("varchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("DescriptionCategoryExpense")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("IdStatus")
                        .HasColumnName("Id_Status")
                        .HasColumnType("int");

                    b.HasKey("IdCategoryExpense");

                    b.HasIndex("IdStatus");

                    b.ToTable("CategoryExpense");
                });

            modelBuilder.Entity("FinanceApp.Entities.Expense", b =>
                {
                    b.Property<int>("IdExpense")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_Expense")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AmountSpent")
                        .HasColumnType("decimal(11,2)");

                    b.Property<int?>("BudgetIdBudget")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateExpense")
                        .HasColumnType("datetime");

                    b.Property<string>("DescriptionExpense")
                        .IsRequired()
                        .HasColumnType("varchar(70)");

                    b.Property<int>("IdCategoryExpense")
                        .HasColumnType("int");

                    b.Property<int>("IdStatus")
                        .HasColumnName("Id_Status")
                        .HasColumnType("int");

                    b.HasKey("IdExpense");

                    b.HasIndex("BudgetIdBudget");

                    b.HasIndex("IdCategoryExpense");

                    b.HasIndex("IdStatus");

                    b.ToTable("Expense");
                });

            modelBuilder.Entity("FinanceApp.Entities.Status", b =>
                {
                    b.Property<int>("IdStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_Status")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodStatus")
                        .IsRequired()
                        .HasColumnType("varchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("DescripcionStatus")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("IdStatus");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("FinanceApp.Entities.User", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_User")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(60)")
                        .HasMaxLength(60);

                    b.Property<int>("IdStatus")
                        .HasColumnName("Id_Status")
                        .HasColumnType("int");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(250)")
                        .HasMaxLength(250);

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(250)")
                        .HasMaxLength(250);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("IdUser");

                    b.HasIndex("IdStatus");

                    b.ToTable("User");
                });

            modelBuilder.Entity("FinanceApp.Entities.Budget", b =>
                {
                    b.HasOne("FinanceApp.Entities.Status", "Status")
                        .WithMany("Budgets")
                        .HasForeignKey("IdStatus")
                        .IsRequired();

                    b.HasOne("FinanceApp.Entities.User", "User")
                        .WithMany("Budgets")
                        .HasForeignKey("IdUser")
                        .IsRequired();
                });

            modelBuilder.Entity("FinanceApp.Entities.CategoryExpense", b =>
                {
                    b.HasOne("FinanceApp.Entities.Status", "Status")
                        .WithMany("CategoryExpenses")
                        .HasForeignKey("IdStatus")
                        .IsRequired();
                });

            modelBuilder.Entity("FinanceApp.Entities.Expense", b =>
                {
                    b.HasOne("FinanceApp.Entities.Budget", null)
                        .WithMany("Expenses")
                        .HasForeignKey("BudgetIdBudget");

                    b.HasOne("FinanceApp.Entities.CategoryExpense", "CategoryExpense")
                        .WithMany("Expenses")
                        .HasForeignKey("IdCategoryExpense")
                        .IsRequired();

                    b.HasOne("FinanceApp.Entities.Status", "Status")
                        .WithMany("Expenses")
                        .HasForeignKey("IdStatus")
                        .IsRequired();
                });

            modelBuilder.Entity("FinanceApp.Entities.User", b =>
                {
                    b.HasOne("FinanceApp.Entities.Status", "Status")
                        .WithMany("Users")
                        .HasForeignKey("IdStatus")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
